apiVersion: v1
kind: ServiceAccount
metadata:
  name:  nginx
  namespace: nginx
---  
apiVersion: v1
kind: Secret
metadata:
  name: nginx-k8s-auth-secret
  namespace: nginx
  annotations:
    kubernetes.io/service-account.name: nginx
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-token-review-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: nginx
    namespace: nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  namespace: nginx
  labels:
    name: nginx
  annotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: 'nginx-role'
    # vault.hashicorp.com/agent-inject-secret-credentials.txt: 'secrets/data/nginx-app'
    vault.hashicorp.com/agent-inject-secret-database-config.txt: 'mongodb/creds/mongo'
    vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "mongodb/creds/mongo" -}}
          mongodb://{{ .Data.username }}:{{ .Data.password }}@mongodb.mongodb.svc.cluster.local:27017
          {{- end -}}
    vault.hashicorp.com/namespace: 'sms'
    vault.hashicorp.com/tls-secret: 'vault-tls'
    vault.hashicorp.com/ca-cert: "/vault/tls/ca.crt"
    vault.hashicorp.com/client-cert: "/vault/tls/tls.crt"
    vault.hashicorp.com/client-key: "/vault/tls/tls.key"
    vault.hashicorp.com/tls-server-name: 'secrets.devvf.com'
    # vault.hashicorp.com/tls-skip-verify: 'true'
spec:
  serviceAccountName: nginx
  containers:
  - name: nginx
    image: nginx
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: nginx
  name: nginx-svc
spec:
  type: NodePort
  selector:
    name: nginx
  ports:
  - port: 80